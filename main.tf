resource "random_uuid" "stack_compartment_name" {
}

resource "oci_identity_compartment" "stack_compartment" {
    compartment_id = var.compartment_ocid
    name = random_uuid.stack_compartment_name.result
    description = var.stack_compartment_description
}

resource "random_string" "topic_name" {
  length  = 10
  special = false
}

resource "random_string" "project_name" {
  length  = 10
  special = false
}


resource "oci_ons_notification_topic" "notification_topic" {
  compartment_id = var.compartment_ocid
  name = random_string.topic_name.result
}


resource "oci_devops_project" "project" {
  compartment_id = var.compartment_ocid
  name = random_string.project_name.result
  notification_config {
    topic_id = oci_ons_notification_topic.notification_topic.id
  }
}

module "munn-build" {
  source = "./modules/munn-build"
  region = var.region
  tenancy_ocid = var.tenancy_ocid
  compartment_ocid = oci_identity_compartment.stack_compartment.id
  project_id = oci_devops_project.project.id
  github_url = var.github_url
  github_token = var.github_token
}

# NoSQL - Requires compartment
resource "random_string" "database_name" {
  length  = 5
  numeric  = false
  special = false
  upper = false
}

resource "oci_nosql_table" "database" {
    compartment_id = var.compartment_ocid
    name = random_string.database_name.result
    # Examples: https://docs.oracle.com/en/database/other-databases/nosql-database/22.3/java-driver-table/create-table.html
    # Key design: https://docs.oracle.com/en/database/other-databases/nosql-database/22.3/java-driver-table/primary-keys.html
    # Index design: https://docs.oracle.com/en/database/other-databases/nosql-database/22.3/java-driver-table/creating-indexes.html
    ddl_statement = "CREATE TABLE IF NOT EXISTS ${random_string.database_name.result} (id STRING AS UUID GENERATED BY DEFAULT, createdAt TIMESTAMP(0), collectedAt TIMESTAMP(0), temperature FLOAT, pressure FLOAT, lux FLOAT, PRIMARY KEY (id))"
    table_limits {
        max_read_units = "25"
        max_write_units = "25"
        max_storage_in_gbs = "5"
    }
}

module "munn-core" {
  source = "./modules/munn-core"
  compartment_ocid = oci_identity_compartment.stack_compartment.id
}

module "munn-fn" {
  source = "./modules/munn-fn"
  tenancy_ocid = var.tenancy_ocid
  compartment_ocid = oci_identity_compartment.stack_compartment.id
  subnet_id = module.munn-core.subnet_id
  image_uris = oci_devops_build_run.initial_build_run.build_outputs[0].delivered_artifacts[0]
  database_name = random_string.database_name.result
}

module "munn-deploy" {
  source = "./modules/munn-deploy"
  tenancy_ocid = var.tenancy_ocid
  compartment_ocid = oci_identity_compartment.stack_compartment.id
  project_id = oci_devops_project.project.id
  put_function_id = module.munn-fn.put_function_id
  get_function_id = module.munn-fn.get_function_id
  put_devops_artifact_id = module.munn-build.put_devops_artifact_id
  get_devops_artifact_id = module.munn-build.get_devops_artifact_id
  build_pipeline_id = module.munn-build.build_pipeline_id
  build_pipeline_deliver_stage_id = module.munn-build.build_pipeline_deliver_stage_id
}

module "sunn-iam" {
  source = "./modules/sunn-iam"
  tenancy_ocid = var.tenancy_ocid
  compartment_ocid = oci_identity_compartment.stack_compartment.id
  put_function_id = oci_functions_function.enviroStore.id
}

module "munn-api" {
  source = "./modules/munn-api"
  compartment_ocid = oci_identity_compartment.stack_compartment.id
  subnet_id = module.munn-core.subnet_id
  get_function_id = oci_functions_function.enviroRetrieve.id
}